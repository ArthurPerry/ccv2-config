# Properties common across all environments and aspects


# place your custom properties into this file instead of modifying the project.properties
# all properties in this file have higher priority and will overwrite the platform/project.properties settings.
# common.properties

lang.packs=de,en

csrf.allowed.url.patterns=/[^/]+(/[^?]*)+(sop/response)$,/[^/]+(/[^?]*)+(merchant_callback)$,/[^/]+(/[^?]*)+(hop/response)$,/[^/]+(/[^?]*)+(language)$,/[^/]+(/[^?]*)+(currency)$,/(events)$

# faster startup / update system etc
backoffice.fill.typefacade.cache.on.startup=false

# double check if this is OK regarding GDPR compliance...
auditing.enabled=false

recaptcha.publickey=
recaptcha.privatekey=
googleApiKey=

orbeonweb.orbeon.persistence.uri=https://localhost:${tomcat.ssl.port}/xyformsweb/fr/service/hybris
xyformsservices.orbeon.url.address=http://localhost:${tomcat.http.port}/web-orbeon
xyformsstorefrontcommons.orbeon.keystoreFile=${platformhome}/tomcat/lib/keystore

sqlserver.enableLimitSupportForSQLServer2012=true

# https://sap.github.io/cloud-commerce-spartacus-storefront-docs/personalization-setup-instructions-for-spartacus/
#corsfilter.ycommercewebservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.api.url.0} ${ccv2.services.accstorefront.url.0}  ${ccv2.services.accstorefront.url.1}  ${ccv2.services.accstorefront.url.2}  ${ccv2.services.accstorefront.url.3}
#corsfilter.commercewebservices.allowedOrigins=*
#corsfilter.commercewebservices.allowedHeaders=origin content-type accept authorization cache-control occ-personalization-id occ-personalization-time x-anonymous-consents
#corsfilter.commercewebservices.exposedHeaders=occ-personalization-id occ-personalization-time

hac.webroot=/hac
demoshopstorefront.webroot=
storefrontContextRoot=

log4j2.logger.nosolr.name=de.hybris.platform.solrfacetsearch.indexer.cron.SolrIndexerJob
log4j2.logger.nosolr.level=WARN

# ccv2.services... properties contain the urls for the default endpoints of a CCv2 environment
website.electronics-spa.http=${ccv2.services.jsapps.url.0}
website.electronics-spa.https=${ccv2.services.jsapps.url.0}


website.electronics.http=${ccv2.services.accstorefront.url.0}${yacceleratorstorefront.webroot}
website.electronics.https=${ccv2.services.accstorefront.url.0}${yacceleratorstorefront.webroot}

# Whitelisting SmartEdit for your Storefront
# https://help.sap.com/viewer/86dd1373053a4c2da8f9885cc9fbe55d/1905/en-US/fb742b29cf3c4e81aac7c131c0441172.html
smarteditaddon.javascript.paths.responsive=/shared/common/js/webApplicationInjector.js?allow-origin=localhost:9002,*.*.model-t.cc.commerce.ondemand.com:443;/shared/common/js/reprocessPage.js;/shared/common/js/adjustComponentRenderingToSE.js;/responsive/common/js/smarteditaddon.js

yacceleratorstorefront.webroot=
yb2bacceleratorstorefront.webroot=/yb2bacceleratorstorefront

website.apparel-uk.http=${ccv2.services.accstorefront.url.0}${yacceleratorstorefront.webroot}
website.apparel-uk.https={ccv2.services.accstorefront.url.0}${yacceleratorstorefront.webroot}

website.powertools.http=${ccv2.services.accstorefront.url.2}${yb2bacceleratorstorefront.webroot}
website.powertools.https=${ccv2.services.accstorefront.url.2}${yb2bacceleratorstorefront.webroot}

website.apparel-de.http=${ccv2.services.accstorefront.url.3}
website.apparel-de.https=${ccv2.services.accstorefront.url.3}

sop.post.url=${ccv2.services.api.url.0}/acceleratorservices/sop-mock/process

#corsfilter.acceleratorservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.api.url.0} ${ccv2.services.api.url.0} ${ccv2.services.accstorefront.url.0} ${ccv2.services.accstorefront.url.1}  ${ccv2.services.accstorefront.url.2}  ${ccv2.services.accstorefront.url.3}  
#corsfilter.acceleratorservices.allowedOrigins=*
corsfilter.acceleratorservices.allowedMethods=GET POST PUT OPTIONS
corsfilter.acceleratorservices.allowedHeaders=origin content-type accept authorization

#corsfilter.assistedservicewebservices.allowedOrigins=${ccv2.services.jsapps.url.0} ${ccv2.services.api.url.0} ${ccv2.services.api.url.0} ${ccv2.services.accstorefront.url.0} ${ccv2.services.accstorefront.url.1}  ${ccv2.services.accstorefront.url.2}  ${ccv2.services.accstorefront.url.3}
#corsfilter.assistedservicewebservices.allowedOrigins=*
cis.client.payment.mock=true

yacceleratorstorefront.additionalWebSpringConfigs.assistedservicestorefront=classpath:/assistedservicestorefront/web/spring/assistedservicestorefront-web-spring.xml
yacceleratorstorefront.additionalWebSpringConfigs.personalizationaddon=classpath:/personalizationaddon/web/spring/personalizationaddon-web-spring.xml
yacceleratorstorefront.additionalWebSpringConfigs.sapsubscriptionaddon=classpath:/sapsubscriptionaddon/web/spring/sapsubscriptionaddon-web-spring.xml

yb2bacceleratorstorefront.additionalWebSpringConfigs.assistedservicestorefront=classpath:/assistedservicestorefront/web/spring/assistedservicestorefront-web-spring.xml
yb2bacceleratorstorefront.additionalWebSpringConfigs.personalizationaddon=classpath:/personalizationaddon/web/spring/personalizationaddon-web-spring.xml
yb2bacceleratorstorefront.additionalWebSpringConfigs.sapsubscriptionaddon=classpath:/sapsubscriptionaddon/web/spring/sapsubscriptionaddon-web-spring.xml

media.electronics-spa.http=${ccv2.services.accstorefront.url.0}
media.electronics-spa.https=${ccv2.services.accstorefront.url.0}

customerticketingc4cintegration.c4c-url=https://my348834.crm.ondemand.com/sap/c4c/odata/v1/yserviceticket
customerticketingc4cintegration.c4c-username=COM_ODATA
customerticketingc4cintegration.c4c-password=Welcome@1

#corsfilter.default.allowedOrigins=*
#corsfilter.permissionswebservices.allowedOrigins=*
#corsfilter.acceleratorservices.allowedOrigins=*
#corsfilter.commercewebservices.allowedOrigins=*
corsfilter.personalizationwebservices.allowedOrigins=*

#Spartacus settings (spartacussampledataaddon/resources/installer/customconfig/custom.properties)
# Sample custom.properites file
# To get Spartacus working with local SAP Commerce Cloud
# Not to be used with production
# Please review settings with experienced SAP Commerce Cloud implementers
# Last updated May 29, 2020

initialpassword.admin=nimda
#sop.post.url=https://localhost:9002/acceleratorservices/sop-mock/process
occ.rewrite.overlapping.paths.enabled=true

corsfilter.default.allowedOrigins=*
corsfilter.acceleratorservices.allowedOrigins=*
corsfilter.permissionswebservices.allowedOrigins=*

corsfilter.ycommercewebservices.allowedOrigins=*
corsfilter.ycommercewebservices.allowedHeaders=origin content-type accept authorization cache-control x-anonymous-consents x-profile-tag-debug x-consent-reference
corsfilter.ycommercewebservices.exposedHeaders=x-anonymous-consents

corsfilter.commercewebservices.allowedOrigins=*
corsfilter.commercewebservices.allowedHeaders=origin content-type accept authorization cache-control x-anonymous-consents x-profile-tag-debug x-consent-reference occ-personalization-id occ-personalization-time
corsfilter.commercewebservices.exposedHeaders=x-anonymous-consents

corsfilter.assistedservicewebservices.allowedOrigins=*
corsfilter.assistedservicewebservices.allowedHeaders=origin content-type accept authorization cache-control x-anonymous-consents x-profile-tag-debug x-consent-reference
corsfilter.assistedservicewebservices.exposedHeaders=x-anonymous-consents

mockup.payment.label.billTo.region=billTo_state
mockup.payment.label.billTo.phoneNumber=billTo_phoneNumber

yacceleratorordermanagement.fraud.scoreLimit=500000
yacceleratorordermanagement.fraud.scoreTolerance=500000
yacceleratorordermanagement.fraud.scoreLimitExternal=500000
yacceleratorordermanagement.fraud.scoreToleranceExternal=500000
task.polling.interval.min=0

smarteditaddon.dynamicattribute.enabled=true

build.parallel=true

backoffice.response.header.Content-Security-Policy=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob:; connect-src 'self'; img-src * data:; style-src 'self' 'unsafe-inline'; font-src 'self'; child-src 'self' *.ondemand.com *.sap.com


yb2bacceleratorstorefront.illegalrequirementstest.excluded=true
multicountrysampledataaddon.import.active=false
backoffice.solr.search.index.autoinit=false

log4j2.logger.sapppspricing.name=com.sap.retail.sapppspricing
log4j2.logger.sapppspricing.level=debug
log4j2.logger.sapppspricing.appenderRef.stdout.ref=STDOUT

